<template>
    <div class="container  mt20">
      <Title title="Course Title" />
      <div class="mt20 flex video-box">
  
        <div class="video-left">
          <video
          ref="video"
            src="https://img.cdn.aliyun.dcloud.net.cn/guide/uniapp/%E7%AC%AC1%E8%AE%B2%EF%BC%88uni-app%E4%BA%A7%E5%93%81%E4%BB%8B%E7%BB%8D%EF%BC%89-%20DCloud%E5%AE%98%E6%96%B9%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B@20200317.mp4">
  
  
          </video>
          <div class="start-box flex align-center justify-center">
            <img src="../../assets/course/start.png" alt="">
          </div>
          <div class="controls flex justify-between">
            <!-- 播放/暂停 -->
            <div>
              <img src="../../assets/course/run-icon.png" alt="">
              <!-- <img src="../../assets/course/pause-icon.png" alt=""> -->
            </div>
            <!-- 当前时间 -->
            <span ref="currPlayTime" class="current">{{ currPlayTime }}</span>
            <!-- 进度条 -->
            <div ref="progress" class="progress" @click="jumpProgress">
              <div ref="loaded" id="loaded" class="loaded"></div>
              <div class="line"></div>
              <div class="bar"></div>
            </div>
            <!-- 总时间 -->
            <span ref="totalTime" class="total">{{ totalTime }}</span>
            <!-- 音量键 -->
            <div>
              <img src="../../assets/course/voice-icon.png" alt="">
            </div>
            <!-- 全屏 -->
            <a ref="expand" class="expand" @click="fullScreen"></a>
  
  
          </div>
  
          <!-- 展示视频的标题，方便 SEO -->
          <!-- <vue-core-video-player  :cover="cover_url" title=""
            src="https://img.cdn.aliyun.dcloud.net.cn/guide/uniapp/%E7%AC%AC1%E8%AE%B2%EF%BC%88uni-app%E4%BA%A7%E5%93%81%E4%BB%8B%E7%BB%8D%EF%BC%89-%20DCloud%E5%AE%98%E6%96%B9%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B@20200317.mp4"></vue-core-video-player> -->
          <!-- <video-player class="video-player-box" ref="videoPlayer" :options="playerOptions" :playsinline="true"
            customEventName="customstatechangedeventname" @play="onPlayerPlay($event)" @pause="onPlayerPause($event)"
            @ended="onPlayerEnded($event)" @waiting="onPlayerWaiting($event)" @playing="onPlayerPlaying($event)"
            @loadeddata="onPlayerLoadeddata($event)" @timeupdate="onPlayerTimeupdate($event)"
            @canplay="onPlayerCanplay($event)" @canplaythrough="onPlayerCanplaythrough($event)"
            @statechanged="playerStateChanged($event)" @ready="playerReadied">
          </video-player> -->
        </div>
        <div class="video-right">
          <span class="video-title">10 Courses </span>
          <div class="video-scroll mt20">
            <div class="video-item " v-for="(item, index) in videoList" :key="item">
              <div class="video-mask" @click="fullScreenHandle">
                <el-button type="primary">Preview</el-button>
              </div>
              <video-player :ref="`videoPlayer${index}`" :options="item.playerOptions" :playsinline="true">
  
              </video-player>
            </div>
          </div>
        </div>
  
  
  
      </div>
    </div>
  </template>
        
  <script>
  // options代表的是对视频控件的设置
  // pause代表的是暂停回调，当视频暂停的时候进行操作
  // ended代表的是视频播放结束的回调，当视频播放完成的时候进行操作
  // timeupdate 代表的是时候监听每一秒进行操作
  import { videoPlayer } from 'vue-video-player'
  import 'video.js/dist/video-js.css'
  import 'vue-video-player/src/custom-theme.css'
  export default {
    components: {
      videoPlayer,
    },
  
    data() {
      return {
        iconList: [{ src: require('@/assets/course/icon1.png'), label: '2000' },
        { src: require('@/assets/course/icon2.png'), label: '2000' },
        { src: require('@/assets/course/icon3.png'), label: '1.68k' },
        { src: require('@/assets/course/icon4.png'), label: '2000' },
        { src: require('@/assets/course/icon5.png'), label: '2000' },
  
        ],
        value: '21dsfsdfsdfd',
        videoList: [],
        playerOptions: {},
        cover_url: 'https://cdn.uviewui.com/uview/album/1.jpg',
        totalTime: null,
        currPlayTime: '00:00:00'
  
      };
    },
    created() {
      // console.log(this.$refs.video,"vvv")
      // this.getVideoList()
  
    },
    methods: {
      getVideoList() {
        this.videoList = [
{src:'https://img.cdn.aliyun.dcloud.net.cn/guide/uniapp/%E7%AC%AC1%E8%AE%B2%EF%BC%88uni-app%E4%BA%A7%E5%93%81%E4%BB%8B%E7%BB%8D%EF%BC%89-%20DCloud%E5%AE%98%E6%96%B9%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B@20200317.mp4'},
{src:'https://media.w3.org/2010/05/sintel/trailer.mp4'},
{src:'https://www.w3schools.com/html/movie.mp4'},
{src:'https://media.w3.org/2010/05/sintel/trailer.mp4'},
{src:'https://media.w3.org/2010/05/sintel/trailer.mp4'},
{src:'https://media.w3.org/2010/05/sintel/trailer.mp4'},
{src:'https://media.w3.org/2010/05/sintel/trailer.mp4'},
{src:'https://media.w3.org/2010/05/sintel/trailer.mp4'},

]
        
      },
  
      // 全屏按钮
      fullScreenHandle() {
        // player = app.$refs.videoPlayer.player;
        let myPlayer = this.$refs.videoPlayer0[0].player
        console.log(this.$refs.videoPlayer0[0].player, "vvvvvvvvvvvvv")
        if (!myPlayer.isFullscreen()) {
          myPlayer.requestFullscreen()
          myPlayer.isFullscreen(true)
        } else {
          myPlayer.exitFullscreen()
          myPlayer.isFullscreen(false)
        }
      },
    },
  
  
  };
  </script>
        
  <style lang="scss" >
  .video-player {}
  
  .video-box {
    width: 100%;
    height: 848px;
    background: rgba(3, 3, 3, 0.44);
    border-radius: 0px 16px 0px 0px;
  
    .video-left {
      width: 890px;
      border-top: 1px solid #e9e7e7;
      border-left: 1px solid #e9e7e7;
      position: relative;
  
      video {
        width: 890px;
        height: 845px;
  
        background: rgba(3, 3, 3, 0.44);
      }
  
      .start-box {
        width: 80px;
        height: 80px;
        border: 3px solid #FFFFFF;
        background-color: rgba(193, 193, 193, 0.45);
        position: absolute;
        top: calc(50% - 40px);
        left: calc(50% - 40px);
  
        border-radius: 50%;
      }
  
      .controls{
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        padding:15px 20px;
      }
  
      /*播放按钮设置成宽高一致，圆形，居中*/
      // .video-js .vjs-big-play-button {
      //   outline: none;
      //   border: none;
      //   width: 66px;
      //   height: 66px !important;
      //   border: 3px solid #fff;
      //   border-radius: 50%;
      //   background-color: rgba(193, 193, 193, 0.45) !important;
      // }
  
      //     // 初始化，暂停按钮居中
      //     .video-js .vjs-big-play-button {
      // display: none !important;
      //       left: 50%;
      //       top: 50%;
      //       transform: translate(-50%, -50%);
      //     }
  
      //     .video-js .vjs-big-play-button .vjs-icon-placeholder:before {
      //       display: none;
      //       content: '';
      //       width: 66px;
      //       height: 66px;
      //       background: url('@/assets/course/start.png') no-repeat;
      //       background-size: 24px 27px;
      //       top: 17px;
      //       left: 20px;
      //     }
  
  
  
      //     .video-js.vjs-fluid {
      //       height: 845px;
      //     }
  
      //     .video-js .vjs-control-bar {
      //     height: 43px;
      //       background: rgba(3, 3, 3, 0.44);
      // display: flex;
      // align-items: center;
      //     }
      //     // .video-js .vjs-time-control{
      //     //   line-height: 43px;
      //     // }
  
      //     .vjs-button>.vjs-icon-placeholder:before {
      //       line-height: 46px;
      //     }
  
      //     .vjs-playback-rate>.vjs-menu-button {
      //       top: 7px;
      //     }
    }
  
    .video-right {
      width: 310px;
      padding: 20px;
  
  
      .video-title {
        color: #FFFFFF;
        font-weight: 600;
        font-size: 24px;
      }
    }
  }
  
  .video-scroll {
    overflow: auto;
  
    .video-item {
      margin-bottom: 6px;
      width: 270px;
      height: 146px;
      border-radius: 6px;
      border: 2px solid #979797;
      overflow: hidden;
      position: relative;
  
      .video-mask {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: flex;
        justify-content: center;
        padding-top: 101px;
        z-index: 10;
  
        color: #FFFFFF;
  
  
        .el-button {
          width: 80px;
          font-size: 16px;
          font-weight: 500;
          display: flex;
          justify-content: center;
          align-items: center;
          height: 28px;
          background: linear-gradient(131deg, rgba(255, 143, 0, 0.66) 0%, rgba(220, 0, 37, 0.66) 100%);
          border-radius: 17px;
  
          &:hover {
            background: linear-gradient(131deg, rgba(255, 143, 0, 0.86) 0%, rgba(220, 0, 37, 0.86) 100%);
          }
  
        }
      }
    }
  
  }
  
  .video-js .vjs-big-play-button {
    display: none !important;
  }
  
  .vjs-control-bar {
    display: none !important;
  }
  
  // /* 全屏组件 */
  // .vjs-custom-skin > .video-js .vjs-control-bar .vjs-fullscreen-control {
  //   position: absolute;
  //   right: 24px;
  //   bottom: 24px;
  //   width: 20px;
  //   height: 20px;
  // }
  // .video-js .vjs-big-play-button .vjs-icon-placeholder:before, .vjs-button > .vjs-icon-placeholder:before {
  //   text-align: right;
  // }
  // /* 全屏按钮图标 */
  // .vjs-icon-fullscreen-enter:before, .video-js .vjs-fullscreen-control .vjs-icon-placeholder:before {
  //   content: '';
  //   width: 20px;
  //   height: 20px;
  // //   background: url('../assets/icon_full@2x.png') no-repeat;
  //   background-size: 100% 100%;
  // }
  // /* 全屏播放后隐藏自定义全屏图标 */
  // .vjs-icon-fullscreen-exit:before, .video-js.vjs-fullscreen .vjs-fullscreen-control .vjs-icon-placeholder:before {
  //   background: url('');
  //   line-height: 20px;
  //   margin-right: 10px;
  // }
  </style>
        